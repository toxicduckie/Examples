{"ast":null,"code":"export const typeFlight = 'Flight';\nexport const typeTurnaround = 'Turnaround';\nexport const turnaroundTime = 2400;\nexport const totalDayTime = 86400;\nexport const timeSort = (a, b) => a.start - b.start;\nexport const flightsSort = (a, b) => {\n  const value = a.departuretime - b.departuretime;\n  return value === 0 ? a.arrivaltime - b.arrivaltime : value;\n};\nexport const calcPercentage = (current, total) => 100 * current / total;\nexport const turnaroundPercentage = calcPercentage(turnaroundTime, totalDayTime);\nexport const usagePercentage = scheduledTime => Math.floor(scheduledTime.reduce((acc, val) => acc + val.percentage, 0));\n\nconst getTodaysDate = () => {\n  const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n  const dayEndObj = {\n    1: 'st',\n    21: 'st',\n    31: 'st',\n    2: 'nd',\n    22: 'nd',\n    3: 'rd',\n    23: 'rd'\n  };\n  const dayEndArray = [1, 2, 3, 21, 22, 23, 31];\n  const today = new Date();\n  const todayDay = today.getDate();\n  const dd = `${todayDay}${dayEndArray.includes(todayDay) ? dayEndObj[todayDay] : 'th'}`;\n  const mm = months[today.getMonth()];\n  const yyyy = today.getFullYear();\n  return `${dd} ${mm} ${yyyy}`;\n};\n\nexport const todaysDate = getTodaysDate();","map":{"version":3,"sources":["C:/Users/Duckie/Documents/AlphaSights Project/flights/src/Components/utils.js"],"names":["typeFlight","typeTurnaround","turnaroundTime","totalDayTime","timeSort","a","b","start","flightsSort","value","departuretime","arrivaltime","calcPercentage","current","total","turnaroundPercentage","usagePercentage","scheduledTime","Math","floor","reduce","acc","val","percentage","getTodaysDate","months","dayEndObj","dayEndArray","today","Date","todayDay","getDate","dd","includes","mm","getMonth","yyyy","getFullYear","todaysDate"],"mappings":"AAAA,OAAO,MAAMA,UAAU,GAAG,QAAnB;AACP,OAAO,MAAMC,cAAc,GAAG,YAAvB;AACP,OAAO,MAAMC,cAAc,GAAG,IAAvB;AACP,OAAO,MAAMC,YAAY,GAAG,KAArB;AAEP,OAAO,MAAMC,QAAQ,GAAG,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACE,KAAF,GAAUD,CAAC,CAACC,KAAvC;AACP,OAAO,MAAMC,WAAW,GAAG,CAACH,CAAD,EAAIC,CAAJ,KAAU;AACnC,QAAMG,KAAK,GAAGJ,CAAC,CAACK,aAAF,GAAkBJ,CAAC,CAACI,aAAlC;AACA,SAAOD,KAAK,KAAK,CAAV,GAAcJ,CAAC,CAACM,WAAF,GAAgBL,CAAC,CAACK,WAAhC,GAA8CF,KAArD;AACD,CAHM;AAKP,OAAO,MAAMG,cAAc,GAAG,CAACC,OAAD,EAAUC,KAAV,KAAqB,MAAMD,OAAP,GAAkBC,KAA7D;AAEP,OAAO,MAAMC,oBAAoB,GAAGH,cAAc,CAChDV,cADgD,EAEhDC,YAFgD,CAA3C;AAKP,OAAO,MAAMa,eAAe,GAAGC,aAAa,IAC1CC,IAAI,CAACC,KAAL,CAAWF,aAAa,CAACG,MAAd,CAAqB,CAACC,GAAD,EAAMC,GAAN,KAAcD,GAAG,GAAGC,GAAG,CAACC,UAA7C,EAAyD,CAAzD,CAAX,CADK;;AAGP,MAAMC,aAAa,GAAG,MAAM;AAC1B,QAAMC,MAAM,GAAG,CACb,SADa,EAEb,UAFa,EAGb,OAHa,EAIb,OAJa,EAKb,KALa,EAMb,MANa,EAOb,MAPa,EAQb,QARa,EASb,WATa,EAUb,SAVa,EAWb,UAXa,EAYb,UAZa,CAAf;AAeA,QAAMC,SAAS,GAAG;AAChB,OAAG,IADa;AAEhB,QAAI,IAFY;AAGhB,QAAI,IAHY;AAIhB,OAAG,IAJa;AAKhB,QAAI,IALY;AAMhB,OAAG,IANa;AAOhB,QAAI;AAPY,GAAlB;AASA,QAAMC,WAAW,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,EAAV,EAAc,EAAd,EAAkB,EAAlB,EAAsB,EAAtB,CAApB;AAEA,QAAMC,KAAK,GAAG,IAAIC,IAAJ,EAAd;AAEA,QAAMC,QAAQ,GAAGF,KAAK,CAACG,OAAN,EAAjB;AACA,QAAMC,EAAE,GAAI,GAAEF,QAAS,GACrBH,WAAW,CAACM,QAAZ,CAAqBH,QAArB,IAAiCJ,SAAS,CAACI,QAAD,CAA1C,GAAuD,IACxD,EAFD;AAGA,QAAMI,EAAE,GAAGT,MAAM,CAACG,KAAK,CAACO,QAAN,EAAD,CAAjB;AACA,QAAMC,IAAI,GAAGR,KAAK,CAACS,WAAN,EAAb;AACA,SAAQ,GAAEL,EAAG,IAAGE,EAAG,IAAGE,IAAK,EAA3B;AACD,CApCD;;AAsCA,OAAO,MAAME,UAAU,GAAGd,aAAa,EAAhC","sourcesContent":["export const typeFlight = 'Flight';\nexport const typeTurnaround = 'Turnaround';\nexport const turnaroundTime = 2400;\nexport const totalDayTime = 86400;\n\nexport const timeSort = (a, b) => a.start - b.start;\nexport const flightsSort = (a, b) => {\n  const value = a.departuretime - b.departuretime;\n  return value === 0 ? a.arrivaltime - b.arrivaltime : value;\n};\n\nexport const calcPercentage = (current, total) => (100 * current) / total;\n\nexport const turnaroundPercentage = calcPercentage(\n  turnaroundTime,\n  totalDayTime,\n);\n\nexport const usagePercentage = scheduledTime =>\n  Math.floor(scheduledTime.reduce((acc, val) => acc + val.percentage, 0));\n\nconst getTodaysDate = () => {\n  const months = [\n    'January',\n    'February',\n    'March',\n    'April',\n    'May',\n    'June',\n    'July',\n    'August',\n    'September',\n    'October',\n    'November',\n    'December',\n  ];\n\n  const dayEndObj = {\n    1: 'st',\n    21: 'st',\n    31: 'st',\n    2: 'nd',\n    22: 'nd',\n    3: 'rd',\n    23: 'rd',\n  };\n  const dayEndArray = [1, 2, 3, 21, 22, 23, 31];\n\n  const today = new Date();\n\n  const todayDay = today.getDate();\n  const dd = `${todayDay}${\n    dayEndArray.includes(todayDay) ? dayEndObj[todayDay] : 'th'\n  }`;\n  const mm = months[today.getMonth()];\n  const yyyy = today.getFullYear();\n  return `${dd} ${mm} ${yyyy}`;\n};\n\nexport const todaysDate = getTodaysDate();\n"]},"metadata":{},"sourceType":"module"}